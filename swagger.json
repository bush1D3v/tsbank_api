{
  "openapi": "3.1.0",
  "info": {
    "title": "TSBank API Documentation",
    "description": "Welcome to the TSBank API Documentation! Here, you will find comprehensive information about the API's endpoints and how to utilize them. Explore the available routes and test their functionality. Don't forget to register and complete the authorization process to unlock the full potential of the API.",
    "contact": {
      "email": "victor.jose.lopes.navarro@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://tsbank-api.onrender.com",
      "description": "Web Server"
    },
    {
      "url": "http://localhost:3001",
      "description": "Local Server"
    }
  ],
  "paths": {
    "/user": {
      "post": {
        "summary": "Create a new user",
        "description": "Route responsible for creating a new user",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "Users": {
                  "value": {
                    "name": "Victor Navarro",
                    "cpf": "12345678931",
                    "phone": "21123456789",
                    "email": "victorjln@gmail.com",
                    "password": "vtjln123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "This email already used per other user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "password is a required field"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/ReturnedUser"
                },
                "examples": {
                  "ReturnedUsers": {
                    "value": {
                      "id": 1,
                      "name": "Victor Navarro",
                      "email": "victorjln@gmail.com"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Details a User",
        "description": "Route responsible for detailing user information",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/ReturnedUser"
                },
                "examples": {
                  "ReturnedUsers": {
                    "value": {
                      "id": 1,
                      "name": "Victor Navarro",
                      "email": "victorjln@gmail.com",
                      "cpf": "12345678931",
                      "phone": "21123456789",
                      "balance": 0
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a User",
        "description": "Route responsible for update user informations",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/UpdateUser"
              },
              "examples": {
                "UpdateUsers": {
                  "value": {
                    "new_email": "victorjln2@gmail.com",
                    "new_password": "vtjln1234",
                    "new_phone": "12987654321",
                    "password": "vtjln123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "This email already used per other user"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Login"
                },
                "examples": {
                  "Logins": {
                    "value": {
                      "id": 1,
                      "name": "Victor Navarro",
                      "email": "victorjln2@gmail.com"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a User",
        "description": "Route responsible for delete user",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/Validation"
              },
              "examples": {
                "Validations": {
                  "value": {
                    "password": "vtjln123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "password is a required field"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Confirmation"
                },
                "examples": {
                  "Logins": {
                    "value": {
                      "message": "Your account has been deleted"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login a user",
        "description": "Route responsible for login a user",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/LoginUser"
              },
              "examples": {
                "LoginUsers": {
                  "value": {
                    "email": "victorjln@gmail.com",
                    "password": "vtjln123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schemas": {
              "$ref": "#/components/schemas/Error"
            },
            "content": {
              "application/json": {
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Invalid email and/or password"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "data and hash must be strings"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Login"
                },
                "examples": {
                  "Logins": {
                    "value": {
                      "user": {
                        "id": 1,
                        "name": "Victor Navarro",
                        "email": "victorjln@gmail.com"
                      },
                      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NTMsImlhdCI6MTY5ODI3Mzk5NCwiZXhwIjoxNjk4MzYwMzk0fQ.QwMyh8lNdX05Oxbin_wksnAH_ncmRqBaTQJJUKk_kEg"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/email": {
      "patch": {
        "summary": "Update a user email",
        "description": "Route responsible for update a user email",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/UpdateUserEmail"
              },
              "examples": {
                "UpdateUserEmails": {
                  "value": {
                    "password": "tumbaTrau",
                    "new_email": "trauTumba@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "This email already used per other user"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schemas": {
              "$ref": "#/components/schemas/Error"
            },
            "content": {
              "application/json": {
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Invalid password"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "new_email is a required field"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Confirmation"
                },
                "examples": {
                  "Confirmations": {
                    "value": {
                      "message": "Your email has been changed successfully, now is 'trauTumba@gmail.com'"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/password": {
      "patch": {
        "summary": "Update a user passowrd",
        "description": "Route responsible for update a user passowrd",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/UpdateUserPassword"
              },
              "examples": {
                "UpdateUserPasswords": {
                  "value": {
                    "password": "tumbaTrau",
                    "new_password": "trauTumba"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schemas": {
              "$ref": "#/components/schemas/Error"
            },
            "content": {
              "application/json": {
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Invalid password"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "new_password is a required field"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Confirmation"
                },
                "examples": {
                  "Confirmations": {
                    "value": {
                      "message": "Your password has been changed successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/phone": {
      "patch": {
        "summary": "Update a user phone",
        "description": "Route responsible for update a user phone",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/UpdateUserPhone"
              },
              "examples": {
                "UpdateUserPhones": {
                  "value": {
                    "password": "tumbaTrau",
                    "new_phone": "31214365879"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "This phone already used per other user"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schemas": {
              "$ref": "#/components/schemas/Error"
            },
            "content": {
              "application/json": {
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Invalid password"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "new_phone is a required field"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Confirmation"
                },
                "examples": {
                  "Confirmations": {
                    "value": {
                      "message": "Your phone has been changed successfully, now is '31214365879'"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit": {
      "post": {
        "summary": "Make a deposit",
        "description": "Route responsible for make a deposit and generate a appropriate transaction",
        "tags": ["Transaction"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/DepositTransaction"
              },
              "examples": {
                "DepositTransactions": {
                  "value": {
                    "value": 30000,
                    "email": "victorjln2@gmail.com",
                    "password": "tumbaTrau"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Email not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Invalid password"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Invalid value"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/ReturnedTransaction"
                },
                "examples": {
                  "ReturnedTransactions": {
                    "value": {
                      "id": 41,
                      "description": "Deposit",
                      "value": 30000,
                      "date": "2023-10-26T03:00:00.000Z",
                      "user_id": 49,
                      "type": "input"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdraw": {
      "post": {
        "summary": "Make a withdraw",
        "description": "Route responsible for make a withdraw and generate a appropriate transaction",
        "tags": ["Transaction"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/OutputTransaction"
              },
              "examples": {
                "OutputTransactions": {
                  "value": {
                    "value": 30000,
                    "password": "tumbaTrau"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Insufficient balance to perform the transaction"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/ReturnedTransaction"
                },
                "examples": {
                  "ReturnedTransactions": {
                    "value": {
                      "id": 41,
                      "description": "Withdraw",
                      "value": 30000,
                      "date": "2023-10-26T03:00:00.000Z",
                      "user_id": 49,
                      "type": "output"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pix": {
      "post": {
        "summary": "Create a pix transaction",
        "description": "Route responsible for create a pix transaction",
        "tags": ["Transaction"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/PixTransaction"
              },
              "examples": {
                "PixTransactions": {
                  "value": {
                    "password": "12345678",
                    "cpf": "12345678931",
                    "value": 2000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Cpf not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Invalid password"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Insufficient balance to perform the transaction"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/ReturnedTransaction"
                },
                "examples": {
                  "ReturnedTransactions": {
                    "value": {
                      "id": 41,
                      "description": "Pix",
                      "value": 2000,
                      "date": "2023-10-26T03:00:00.000Z",
                      "user_id": 49,
                      "type": "output"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transaction": {
      "post": {
        "summary": "Create a new transaction",
        "description": "Route responsible for create a transaction",
        "tags": ["Transaction"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/Transaction"
              },
              "examples": {
                "Transactions": {
                  "value": {
                    "type": "input",
                    "description": "Credit",
                    "value": 300000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "description is a required field"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/ReturnedTransaction"
                },
                "examples": {
                  "ReturnedTransactions": {
                    "value": {
                      "id": 41,
                      "description": "Credit",
                      "value": 300000,
                      "date": "2023-10-26T03:00:00.000Z",
                      "user_id": 49,
                      "type": "input"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Summary user transactions",
        "description": "Route responsible for summary a user transactions",
        "tags": ["Transaction"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Your account does not have any registered transaction"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/SummaryTransaction"
                },
                "examples": {
                  "SummaryTransactions": {
                    "value": {
                      "input": 20000,
                      "output": 3500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transaction/{id}": {
      "get": {
        "summary": "Detail user transaction",
        "description": "Route responsible for detail a user transaction",
        "tags": ["Transaction"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "description": "Transaction identifier",
            "required": true
          }
        ],
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Transaction not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Invalid value of 'id' parameter"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/ReturnedTransaction"
                },
                "examples": {
                  "ReturnedTransactions": {
                    "value": {
                      "id": 42,
                      "description": "Debit",
                      "value": 300000,
                      "date": "2023-10-26T03:00:00.000Z",
                      "user_id": 58,
                      "type": "input"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user transaction",
        "description": "Route responsible for delete a user transaction",
        "tags": ["Transaction"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/Validation"
              },
              "examples": {
                "Validations": {
                  "value": {
                    "password": "tumbaTrau"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "description": "Transaction identifier",
            "required": true
          }
        ],
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Transaction not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Invalid value of 'id' parameter"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Confirmation"
                },
                "examples": {
                  "Confirmations": {
                    "value": {
                      "message": "Your transaction has been deleted successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card": {
      "post": {
        "summary": "Create a card",
        "description": "Route responsible for create a card",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/Card"
              },
              "examples": {
                "Cards": {
                  "value": {
                    "card_number": "1234567812345678",
                    "cardholder_name": "Victor Smith",
                    "expiration_date": "12/31",
                    "cvv": "123",
                    "password": "123456",
                    "card_type": "Credit"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "User already have a credit card"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Confirmation"
                },
                "examples": {
                  "Confirmations": {
                    "value": {
                      "message": "Credit card added successfully. Your credit limit is 20000"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a card password",
        "description": "Route responsible for update a card password",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/UpdateCardPassword"
              },
              "examples": {
                "UpdateCardPasswords": {
                  "value": {
                    "new_password": "654321",
                    "password": "123456",
                    "card_type": "Credit"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "This user not have a credit card"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "new_password is a required field"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Confirmation"
                },
                "examples": {
                  "Confirmations": {
                    "value": {
                      "message": "Password of your credit card has been updated successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transaction/card": {
      "post": {
        "summary": "Create a card transaction",
        "description": "Route responsible for create a card transaction",
        "tags": ["Transaction"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/CardTransaction"
              },
              "examples": {
                "CardTransactions": {
                  "value": {
                    "password": "123456",
                    "card_type": "Credit",
                    "value": 2000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "This user not have a credit card"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Invalid password"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Insufficient balance to perform the transaction"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Confirmation"
                },
                "examples": {
                  "ReturnedTransactions": {
                    "value": {
                      "id": 41,
                      "description": "Credit",
                      "value": 2000,
                      "date": "2023-10-26T03:00:00.000Z",
                      "user_id": 49,
                      "type": "output"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card/pay": {
      "post": {
        "summary": "Make a card payment",
        "description": "Route responsible for make a card payment",
        "tags": ["Transaction"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schemas": {
                "$ref": "#/components/schemas/CardPayer"
              },
              "examples": {
                "CardPayers": {
                  "value": {
                    "password": "'123456'",
                    "value": 2000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "This user not have a credit card"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Invalid password"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Insufficient balance to perform the transaction"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/ReturnedTransaction"
                },
                "examples": {
                  "ReturnedTransactions": {
                    "value": {
                      "id": 41,
                      "description": "Card pay",
                      "value": 2000,
                      "date": "2023-10-26T03:00:00.000Z",
                      "user_id": 49,
                      "type": "output"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/history": {
      "get": {
        "summary": "Get a user transaction history",
        "description": "Route responsible for make a card payment",
        "tags": ["Transaction"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Your account does not have any registered transaction"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Errors": {
                    "value": {
                      "message": "Invalid password"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schemas": {
                  "$ref": "#/components/schemas/Confirmation"
                },
                "examples": {
                  "Confirmations": {
                    "value": {
                      "Input": [
                        {
                          "id": 41,
                          "description": "Deposit",
                          "value": 300000,
                          "date": "2023-10-26T03:00:00.000Z",
                          "user_id": 49,
                          "type": "input"
                        },
                        {
                          "id": 42,
                          "description": "Pix",
                          "value": 300000,
                          "date": "2023-10-27T03:00:00.000Z",
                          "user_id": 49,
                          "type": "input"
                        }
                      ],
                      "Output": [
                        {
                          "id": 11,
                          "description": "Card pay",
                          "value": 25000,
                          "date": "2022-08-05T03:00:00.000Z",
                          "user_id": 49,
                          "type": "output"
                        },
                        {
                          "id": 12,
                          "description": "Pix",
                          "value": 300000,
                          "date": "2022-09-16T03:00:00.000Z",
                          "user_id": 49,
                          "type": "input"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "ReturnedUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "balance": {
            "type": "number"
          }
        }
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UpdateUserEmail": {
        "type": "object",
        "properties": {
          "new_email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UpdateUserPassword": {
        "type": "object",
        "properties": {
          "new_password": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UpdateUserPhone": {
        "type": "object",
        "properties": {
          "new_phone": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "new_email": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "new_phone": {
            "type": "string"
          }
        }
      },
      "DeleteUser": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "TransactionValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number"
          }
        }
      },
      "DepositTransaction": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "OutputTransaction": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Returnedtransaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "date": {
            "type": "string"
          },
          "user_id": {
            "type": "number"
          }
        }
      },
      "SummaryTransaction": {
        "type": "objeect",
        "properties": {
          "input": {
            "type": "number"
          },
          "output": {
            "type": "number"
          }
        }
      },
      "Card": {
        "type": "object",
        "properties": {
          "card_number": {
            "type": "string"
          },
          "cardholder_name": {
            "type": "string"
          },
          "expiration_date": {
            "type": "string"
          },
          "cvv": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "card_type": {
            "type": "string"
          }
        }
      },
      "CardTransaction": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "card_type": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "CardPayers": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "PixTransactions": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "UpdateCardPassword": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "card_type": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          }
        }
      },
      "Confirmation": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
